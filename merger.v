// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="merger,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.953000,HLS_SYN_LAT=74,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module merger (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_address0,
        sum_ce0,
        sum_q0,
        counter_address0,
        counter_ce0,
        counter_q0,
        centres_address0,
        centres_ce0,
        centres_we0,
        centres_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b00;
parameter    ap_ST_pp0_stg0_fsm_1 = 2'b1;
parameter    ap_ST_st70_fsm_2 = 2'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_BF = 32'b10111111;
parameter    ap_const_lv32_C0 = 32'b11000000;
parameter    ap_const_lv32_FF = 32'b11111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] sum_address0;
output   sum_ce0;
input  [255:0] sum_q0;
output  [2:0] counter_address0;
output   counter_ce0;
input  [31:0] counter_q0;
output  [2:0] centres_address0;
output   centres_ce0;
output   centres_we0;
output  [63:0] centres_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sum_ce0;
reg counter_ce0;
reg centres_ce0;
reg centres_we0;
reg   [1:0] ap_CS_fsm = 2'b00;
reg   [2:0] i_reg_94;
wire   [0:0] exitcond1_fu_106_p2;
reg   [0:0] exitcond1_reg_215;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg    ap_reg_ppiten_pp0_it41 = 1'b0;
reg    ap_reg_ppiten_pp0_it42 = 1'b0;
reg    ap_reg_ppiten_pp0_it43 = 1'b0;
reg    ap_reg_ppiten_pp0_it44 = 1'b0;
reg    ap_reg_ppiten_pp0_it45 = 1'b0;
reg    ap_reg_ppiten_pp0_it46 = 1'b0;
reg    ap_reg_ppiten_pp0_it47 = 1'b0;
reg    ap_reg_ppiten_pp0_it48 = 1'b0;
reg    ap_reg_ppiten_pp0_it49 = 1'b0;
reg    ap_reg_ppiten_pp0_it50 = 1'b0;
reg    ap_reg_ppiten_pp0_it51 = 1'b0;
reg    ap_reg_ppiten_pp0_it52 = 1'b0;
reg    ap_reg_ppiten_pp0_it53 = 1'b0;
reg    ap_reg_ppiten_pp0_it54 = 1'b0;
reg    ap_reg_ppiten_pp0_it55 = 1'b0;
reg    ap_reg_ppiten_pp0_it56 = 1'b0;
reg    ap_reg_ppiten_pp0_it57 = 1'b0;
reg    ap_reg_ppiten_pp0_it58 = 1'b0;
reg    ap_reg_ppiten_pp0_it59 = 1'b0;
reg    ap_reg_ppiten_pp0_it60 = 1'b0;
reg    ap_reg_ppiten_pp0_it61 = 1'b0;
reg    ap_reg_ppiten_pp0_it62 = 1'b0;
reg    ap_reg_ppiten_pp0_it63 = 1'b0;
reg    ap_reg_ppiten_pp0_it64 = 1'b0;
reg    ap_reg_ppiten_pp0_it65 = 1'b0;
reg    ap_reg_ppiten_pp0_it66 = 1'b0;
reg    ap_reg_ppiten_pp0_it67 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it35;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it36;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it37;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it38;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it39;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it40;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it41;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it42;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it43;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it44;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it45;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it46;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it47;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it48;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it49;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it50;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it51;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it52;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it53;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it54;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it55;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it56;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it57;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it58;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it59;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it60;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it61;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it62;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it63;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it64;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it65;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_215_pp0_it66;
wire   [2:0] i_1_fu_112_p2;
wire   [31:0] i_cast1_fu_118_p1;
reg   [31:0] i_cast1_reg_224;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it1;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it2;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it3;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it4;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it5;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it6;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it7;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it8;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it9;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it10;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it11;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it12;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it13;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it14;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it15;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it16;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it17;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it18;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it19;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it20;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it21;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it22;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it23;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it24;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it25;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it26;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it27;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it28;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it29;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it30;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it31;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it32;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it33;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it34;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it35;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it36;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it37;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it38;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it39;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it40;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it41;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it42;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it43;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it44;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it45;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it46;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it47;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it48;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it49;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it50;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it51;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it52;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it53;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it54;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it55;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it56;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it57;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it58;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it59;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it60;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it61;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it62;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it63;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it64;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it65;
reg   [31:0] ap_reg_ppstg_i_cast1_reg_224_pp0_it66;
wire   [63:0] tmp3_fu_128_p1;
wire   [63:0] grp_fu_132_p0;
wire   [63:0] grp_fu_132_p1;
wire   [63:0] grp_fu_148_p0;
wire   [63:0] grp_fu_148_p1;
wire   [63:0] grp_fu_164_p0;
wire   [63:0] grp_fu_164_p1;
wire   [63:0] grp_fu_180_p0;
wire   [63:0] grp_fu_180_p1;
wire   [63:0] grp_fu_132_p2;
wire   [63:0] grp_fu_148_p2;
wire   [63:0] grp_fu_164_p2;
wire   [63:0] grp_fu_180_p2;
wire   [15:0] tmp_8_fu_198_p1;
wire   [15:0] tmp_6_fu_194_p1;
wire   [15:0] tmp_4_fu_190_p1;
wire   [15:0] tmp_3_fu_186_p1;
wire    grp_fu_132_ce;
wire    grp_fu_148_ce;
wire    grp_fu_164_ce;
wire    grp_fu_180_ce;
reg   [1:0] ap_NS_fsm;


merger_udiv_64ns_64ns_64_67 #(
    .ID( 1 ),
    .NUM_STAGE( 67 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
merger_udiv_64ns_64ns_64_67_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_132_p0 ),
    .din1( grp_fu_132_p1 ),
    .ce( grp_fu_132_ce ),
    .dout( grp_fu_132_p2 )
);

merger_udiv_64ns_64ns_64_67 #(
    .ID( 2 ),
    .NUM_STAGE( 67 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
merger_udiv_64ns_64ns_64_67_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_148_p0 ),
    .din1( grp_fu_148_p1 ),
    .ce( grp_fu_148_ce ),
    .dout( grp_fu_148_p2 )
);

merger_udiv_64ns_64ns_64_67 #(
    .ID( 3 ),
    .NUM_STAGE( 67 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
merger_udiv_64ns_64ns_64_67_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_164_p0 ),
    .din1( grp_fu_164_p1 ),
    .ce( grp_fu_164_ce ),
    .dout( grp_fu_164_p2 )
);

merger_udiv_64ns_64ns_64_67 #(
    .ID( 4 ),
    .NUM_STAGE( 67 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
merger_udiv_64ns_64ns_64_67_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_180_p0 ),
    .din1( grp_fu_180_p1 ),
    .ce( grp_fu_180_ce ),
    .dout( grp_fu_180_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_106_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (exitcond1_fu_106_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_106_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end
    end
end

/// ap_reg_ppiten_pp0_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
        end
    end
end

/// ap_reg_ppiten_pp0_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
        end
    end
end

/// ap_reg_ppiten_pp0_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
        end
    end
end

/// ap_reg_ppiten_pp0_it41 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it41
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
        end
    end
end

/// ap_reg_ppiten_pp0_it42 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it42
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
        end
    end
end

/// ap_reg_ppiten_pp0_it43 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it43
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
        end
    end
end

/// ap_reg_ppiten_pp0_it44 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it44
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
        end
    end
end

/// ap_reg_ppiten_pp0_it45 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it45
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
        end
    end
end

/// ap_reg_ppiten_pp0_it46 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it46
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
        end
    end
end

/// ap_reg_ppiten_pp0_it47 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it47
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
        end
    end
end

/// ap_reg_ppiten_pp0_it48 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it48
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
        end
    end
end

/// ap_reg_ppiten_pp0_it49 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it49
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it50 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it50
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
        end
    end
end

/// ap_reg_ppiten_pp0_it51 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it51
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
        end
    end
end

/// ap_reg_ppiten_pp0_it52 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it52
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
        end
    end
end

/// ap_reg_ppiten_pp0_it53 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it53
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
        end
    end
end

/// ap_reg_ppiten_pp0_it54 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it54
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it54 <= ap_reg_ppiten_pp0_it53;
        end
    end
end

/// ap_reg_ppiten_pp0_it55 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it55
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it55 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it55 <= ap_reg_ppiten_pp0_it54;
        end
    end
end

/// ap_reg_ppiten_pp0_it56 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it56
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it56 <= ap_reg_ppiten_pp0_it55;
        end
    end
end

/// ap_reg_ppiten_pp0_it57 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it57
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it57 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it57 <= ap_reg_ppiten_pp0_it56;
        end
    end
end

/// ap_reg_ppiten_pp0_it58 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it58
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it58 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it58 <= ap_reg_ppiten_pp0_it57;
        end
    end
end

/// ap_reg_ppiten_pp0_it59 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it59
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it59 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it59 <= ap_reg_ppiten_pp0_it58;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it60 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it60
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it60 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it60 <= ap_reg_ppiten_pp0_it59;
        end
    end
end

/// ap_reg_ppiten_pp0_it61 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it61
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it61 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it61 <= ap_reg_ppiten_pp0_it60;
        end
    end
end

/// ap_reg_ppiten_pp0_it62 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it62
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it62 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it62 <= ap_reg_ppiten_pp0_it61;
        end
    end
end

/// ap_reg_ppiten_pp0_it63 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it63
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it63 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it63 <= ap_reg_ppiten_pp0_it62;
        end
    end
end

/// ap_reg_ppiten_pp0_it64 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it64
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it64 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it64 <= ap_reg_ppiten_pp0_it63;
        end
    end
end

/// ap_reg_ppiten_pp0_it65 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it65
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it65 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it65 <= ap_reg_ppiten_pp0_it64;
        end
    end
end

/// ap_reg_ppiten_pp0_it66 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it66
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it66 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it66 <= ap_reg_ppiten_pp0_it65;
        end
    end
end

/// ap_reg_ppiten_pp0_it67 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it67
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it67 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it67 <= ap_reg_ppiten_pp0_it66;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it67 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_106_p2 == ap_const_lv1_0))) begin
        i_reg_94 <= i_1_fu_112_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_94 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond1_reg_215_pp0_it1 <= exitcond1_reg_215;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it9;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it10;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it12 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it11;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it13 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it12;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it14 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it13;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it15 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it14;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it16 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it15;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it17 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it16;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it18 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it17;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it19 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it18;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it20 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it19;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it21 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it20;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it22 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it21;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it23 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it22;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it24 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it23;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it25 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it24;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it26 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it25;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it27 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it26;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it28 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it27;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it29 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it28;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it30 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it29;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it31 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it30;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it32 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it31;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it33 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it32;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it34 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it33;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it35 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it34;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it36 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it35;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it37 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it36;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it38 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it37;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it39 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it38;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it40 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it39;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it41 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it40;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it42 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it41;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it43 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it42;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it44 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it43;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it45 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it44;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it46 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it45;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it47 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it46;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it48 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it47;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it49 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it48;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it50 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it49;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it51 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it50;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it52 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it51;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it53 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it52;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it54 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it53;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it55 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it54;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it56 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it55;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it57 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it56;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it58 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it57;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it59 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it58;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it5;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it60 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it59;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it61 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it60;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it62 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it61;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it63 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it62;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it64 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it63;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it65 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it64;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it66 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it65;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it6;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it7;
        ap_reg_ppstg_exitcond1_reg_215_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_215_pp0_it8;
        ap_reg_ppstg_i_cast1_reg_224_pp0_it1[0] <= i_cast1_reg_224[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it1[1] <= i_cast1_reg_224[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it1[2] <= i_cast1_reg_224[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it10[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it9[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it10[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it9[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it10[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it9[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it11[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it10[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it11[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it10[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it11[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it10[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it12[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it11[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it12[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it11[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it12[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it11[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it13[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it12[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it13[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it12[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it13[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it12[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it14[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it13[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it14[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it13[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it14[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it13[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it15[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it14[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it15[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it14[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it15[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it14[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it16[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it15[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it16[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it15[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it16[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it15[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it17[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it16[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it17[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it16[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it17[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it16[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it18[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it17[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it18[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it17[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it18[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it17[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it19[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it18[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it19[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it18[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it19[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it18[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it2[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it1[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it2[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it1[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it2[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it1[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it20[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it19[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it20[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it19[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it20[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it19[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it21[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it20[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it21[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it20[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it21[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it20[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it22[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it21[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it22[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it21[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it22[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it21[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it23[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it22[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it23[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it22[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it23[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it22[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it24[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it23[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it24[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it23[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it24[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it23[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it25[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it24[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it25[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it24[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it25[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it24[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it26[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it25[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it26[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it25[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it26[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it25[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it27[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it26[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it27[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it26[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it27[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it26[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it28[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it27[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it28[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it27[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it28[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it27[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it29[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it28[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it29[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it28[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it29[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it28[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it3[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it2[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it3[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it2[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it3[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it2[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it30[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it29[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it30[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it29[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it30[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it29[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it31[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it30[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it31[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it30[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it31[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it30[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it32[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it31[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it32[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it31[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it32[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it31[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it33[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it32[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it33[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it32[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it33[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it32[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it34[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it33[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it34[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it33[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it34[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it33[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it35[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it34[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it35[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it34[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it35[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it34[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it36[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it35[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it36[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it35[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it36[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it35[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it37[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it36[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it37[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it36[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it37[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it36[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it38[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it37[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it38[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it37[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it38[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it37[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it39[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it38[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it39[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it38[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it39[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it38[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it4[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it3[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it4[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it3[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it4[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it3[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it40[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it39[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it40[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it39[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it40[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it39[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it41[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it40[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it41[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it40[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it41[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it40[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it42[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it41[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it42[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it41[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it42[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it41[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it43[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it42[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it43[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it42[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it43[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it42[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it44[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it43[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it44[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it43[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it44[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it43[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it45[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it44[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it45[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it44[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it45[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it44[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it46[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it45[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it46[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it45[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it46[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it45[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it47[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it46[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it47[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it46[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it47[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it46[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it48[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it47[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it48[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it47[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it48[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it47[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it49[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it48[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it49[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it48[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it49[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it48[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it5[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it4[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it5[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it4[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it5[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it4[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it50[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it49[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it50[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it49[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it50[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it49[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it51[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it50[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it51[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it50[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it51[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it50[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it52[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it51[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it52[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it51[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it52[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it51[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it53[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it52[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it53[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it52[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it53[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it52[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it54[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it53[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it54[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it53[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it54[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it53[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it55[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it54[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it55[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it54[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it55[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it54[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it56[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it55[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it56[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it55[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it56[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it55[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it57[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it56[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it57[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it56[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it57[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it56[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it58[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it57[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it58[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it57[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it58[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it57[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it59[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it58[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it59[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it58[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it59[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it58[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it6[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it5[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it6[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it5[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it6[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it5[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it60[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it59[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it60[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it59[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it60[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it59[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it61[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it60[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it61[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it60[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it61[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it60[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it62[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it61[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it62[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it61[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it62[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it61[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it63[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it62[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it63[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it62[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it63[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it62[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it64[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it63[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it64[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it63[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it64[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it63[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it65[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it64[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it65[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it64[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it65[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it64[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it66[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it65[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it66[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it65[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it66[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it65[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it7[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it6[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it7[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it6[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it7[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it6[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it8[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it7[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it8[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it7[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it8[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it7[2];
        ap_reg_ppstg_i_cast1_reg_224_pp0_it9[0] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it8[0];
ap_reg_ppstg_i_cast1_reg_224_pp0_it9[1] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it8[1];
ap_reg_ppstg_i_cast1_reg_224_pp0_it9[2] <= ap_reg_ppstg_i_cast1_reg_224_pp0_it8[2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond1_reg_215 <= exitcond1_fu_106_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_106_p2 == ap_const_lv1_0))) begin
        i_cast1_reg_224[0] <= i_cast1_fu_118_p1[0];
i_cast1_reg_224[1] <= i_cast1_fu_118_p1[1];
i_cast1_reg_224[2] <= i_cast1_fu_118_p1[2];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st70_fsm_2 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st70_fsm_2 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// centres_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it67)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it67))) begin
        centres_ce0 = ap_const_logic_1;
    end else begin
        centres_ce0 = ap_const_logic_0;
    end
end

/// centres_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it67 or ap_reg_ppstg_exitcond1_reg_215_pp0_it66)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it67) & (ap_reg_ppstg_exitcond1_reg_215_pp0_it66 == ap_const_lv1_0))) begin
        centres_we0 = ap_const_logic_1;
    end else begin
        centres_we0 = ap_const_logic_0;
    end
end

/// counter_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        counter_ce0 = ap_const_logic_1;
    end else begin
        counter_ce0 = ap_const_logic_0;
    end
end

/// sum_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        sum_ce0 = ap_const_logic_1;
    end else begin
        sum_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_106_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it66 or ap_reg_ppiten_pp0_it67)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it67) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it66)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_106_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_106_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st70_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st70_fsm_2;
            end
        end
        ap_ST_st70_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign centres_address0 = ap_reg_ppstg_i_cast1_reg_224_pp0_it66;
assign centres_d0 = {{{{{{tmp_8_fu_198_p1}, {tmp_6_fu_194_p1}}}, {tmp_4_fu_190_p1}}}, {tmp_3_fu_186_p1}};
assign counter_address0 = i_cast1_fu_118_p1;
assign exitcond1_fu_106_p2 = (i_reg_94 == ap_const_lv3_6? 1'b1: 1'b0);
assign grp_fu_132_ce = ap_const_logic_1;
assign grp_fu_132_p0 = sum_q0[63:0];
assign grp_fu_132_p1 = tmp3_fu_128_p1;
assign grp_fu_148_ce = ap_const_logic_1;
assign grp_fu_148_p0 = {{sum_q0[ap_const_lv32_7F : ap_const_lv32_40]}};
assign grp_fu_148_p1 = tmp3_fu_128_p1;
assign grp_fu_164_ce = ap_const_logic_1;
assign grp_fu_164_p0 = {{sum_q0[ap_const_lv32_BF : ap_const_lv32_80]}};
assign grp_fu_164_p1 = tmp3_fu_128_p1;
assign grp_fu_180_ce = ap_const_logic_1;
assign grp_fu_180_p0 = {{sum_q0[ap_const_lv32_FF : ap_const_lv32_C0]}};
assign grp_fu_180_p1 = tmp3_fu_128_p1;
assign i_1_fu_112_p2 = (i_reg_94 + ap_const_lv3_1);
assign i_cast1_fu_118_p1 = $unsigned(i_reg_94);
assign sum_address0 = i_cast1_fu_118_p1;
assign tmp3_fu_128_p1 = $unsigned(counter_q0);
assign tmp_3_fu_186_p1 = grp_fu_132_p2[15:0];
assign tmp_4_fu_190_p1 = grp_fu_148_p2[15:0];
assign tmp_6_fu_194_p1 = grp_fu_164_p2[15:0];
assign tmp_8_fu_198_p1 = grp_fu_180_p2[15:0];
always @ (posedge ap_clk)
begin
    i_cast1_reg_224[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it1[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it2[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it3[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it4[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it5[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it6[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it7[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it8[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it9[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it10[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it11[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it12[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it13[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it14[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it15[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it16[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it17[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it18[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it19[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it20[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it21[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it22[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it23[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it24[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it25[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it26[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it27[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it28[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it29[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it30[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it31[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it32[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it33[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it34[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it35[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it36[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it37[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it38[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it39[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it40[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it41[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it42[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it43[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it44[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it45[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it46[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it47[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it48[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it49[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it50[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it51[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it52[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it53[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it54[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it55[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it56[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it57[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it58[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it59[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it60[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it61[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it62[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it63[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it64[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it65[31:3] <= 29'b00000000000000000000000000000;
    ap_reg_ppstg_i_cast1_reg_224_pp0_it66[31:3] <= 29'b00000000000000000000000000000;
end



endmodule //merger

